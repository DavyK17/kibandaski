{
    "openapi": "3.0.3",
    "info": {
        "title": "Kibandaski (/api)",
        "version": "1.0.0",
        "description": "Codecademy portfolio project: Kibandaski (e-commerce app)",
        "contact": {
            "name": "Davy Kamanzi",
            "url": "https://davyk17.github.io"
        }
    },
    "servers": [
        { "url": "https://kibandaski.up.railway.app/", "description": "Production server" }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Create a new user account",
                "requestBody": {
                    "description": "new user's details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                        "$ref": "#/components/schemas/names"
                                    },
                                    {
                                        "$ref": "#/components/schemas/login"
                                    },
                                    {
                                        "required": [
                                            "firstName",
                                            "lastName",
                                            "phone",
                                            "email",
                                            "password"
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Confirmation of the operation",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "User created with ID: [user ID]"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error message (if input is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Email must be a string.",
                                    "examples": [
                                        "Error: Email must be a string.",
                                        "Error: Invalid email provided."
                                    ]
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "An error message (if email already exists in database)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: A user with the provided email already exists."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Log in user",
                "requestBody": {
                    "description": "user's details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                        "$ref": "#/components/schemas/login"
                                    },
                                    {
                                        "required": [
                                            "email",
                                            "password"
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "An object containing the user's JSON web token",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjczNTUyMzQiLCJlbWFpbCI6InRoaXNpc2FuQGVtYWlsLmNvbSIsInJvbGUiOiJjdXN0b21lciIsImNhcnRJZCI6IjM1OTk1ODQifQ.DquM29yPCQlFM4D6SCKPrbskdd-oMkJSQbK0KAq6jxE"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error message (if input is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Email must be a string.",
                                    "examples": [
                                        "Error: Email must be a string.",
                                        "Error: Invalid email provided.",
                                        "Error: Incorrect email or password provided."
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "An error message (if already logged in)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: You are already logged in."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "description": "Log out user",
                "security": [{
                    "bearerAuth": []
                }],
                "responses": {
                    "200": {
                        "description": "Confirmation of the operation",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Logout successful"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "description": "Return current user's data",
                "security": [{
                    "bearerAuth": []
                }],
                "responses": {
                    "200": {
                        "description": "An object with current user's data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/account"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/orders": {
            "get": {
                "tags": ["Admin", "Orders"],
                "description": "Return all orders",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "in": "query",
                    "name": "id",
                    "schema": {
                        "$ref": "#/components/schemas/orderId"
                    },
                    "description": "Numeric ID of specific order to get"
                }],
                "responses": {
                    "200": {
                        "description": "An array with orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [{
                                            "$ref": "#/components/schemas/ordersAll"
                                        },
                                        {
                                            "$ref": "#/components/schemas/orderAll"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error message (if order ID is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Invalid order ID provided."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "An error message (if no orders found or order does not exist)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: No orders found.",
                                    "examples": [
                                        "Error: No orders found.",
                                        "Error: This order does not exist."
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/orders/{userId}": {
            "get": {
                "tags": ["Admin", "Orders"],
                "description": "Return all orders by user",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "in": "path",
                    "name": "userId",
                    "schema": {
                        "$ref": "#/components/schemas/userId"
                    },
                    "description": "Numeric ID of specific user for whom to get orders",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "An array with user's orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [{
                                            "$ref": "#/components/schemas/orders"
                                        },
                                        {
                                            "$ref": "#/components/schemas/order"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error message (if order ID is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Invalid order ID provided."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "An error message (if order does not exist)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: This order does not exist."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/orders/acknowledge": {
            "get": {
                "tags": ["Admin", "Orders"],
                "description": "Acknowledge order",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "in": "query",
                    "name": "id",
                    "schema": {
                        "$ref": "#/components/schemas/orderId"
                    },
                    "description": "Numeric ID of specific order to acknowledge",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Confirmation of the acknowledgement",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "Order acknowledged with ID: [order ID]"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error message (if no order ID or order ID is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: No order ID provided.",
                                    "examples": [
                                        "Error: No order ID provided.",
                                        "Error: Invalid order ID provided."
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "An error message (if order has already been acknowledged, fulfilled or cancelled)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: The order has already been acknowledged.",
                                    "examples": [
                                        "Error: The order has already been acknowledged.",
                                        "Error: The order has already been fulfilled.",
                                        "Error: The order has already been cancelled."
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "An error message (if order does not exist)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: This order does not exist."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/orders/fulfill": {
            "get": {
                "tags": ["Admin", "Orders"],
                "description": "Fulfill order",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "in": "query",
                    "name": "id",
                    "schema": {
                        "$ref": "#/components/schemas/orderId"
                    },
                    "description": "Numeric ID of specific order to fulfill",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Confirmation of the fulfillment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "Order fulfilled with ID: [order ID]"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error message (if no order ID or order ID is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: No order ID provided.",
                                    "examples": [
                                        "Error: No order ID provided.",
                                        "Error: Invalid order ID provided."
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "An error message (if order is still pending or has already been fulfilled or cancelled)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: The order is still pending.",
                                    "examples": [
                                        "Error: The order is still pending.",
                                        "Error: The order has already been fulfilled.",
                                        "Error: The order has already been cancelled."
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "An error message (if order does not exist)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: This order does not exist."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/products": {
            "post": {
                "tags": ["Admin", "Products"],
                "description": "Create a new product",
                "requestBody": {
                    "description": "new product details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/productBody"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Confirmation of the operation",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Product created with ID: [product ID]"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error message (if input is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Name must be a string.",
                                    "examples": [
                                        "Error: Name must be a string.",
                                        "Error: Description must be a string.",
                                        "Error: Description must be no longer than 255 characters.",
                                        "Error: Price must be a number.",
                                        "Error: Category must be a string."
                                    ]
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "An error message (if product already exists)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: A product with the provided name already exists."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Admin", "Products"],
                "description": "Update a product",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "in": "query",
                    "name": "id",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Numeric ID of product to update",
                    "required": true
                }],
                "requestBody": {
                    "description": "new details to update to product",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/productBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Confirmation of the operation",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Product updated with ID: [product ID]"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error message (if no product ID provided, no updates provided or input is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: No product ID provided.",
                                    "examples": [
                                        "Error: No product ID provided.",
                                        "Error: No updates provided.",
                                        "Error: Name must be a string.",
                                        "Error: Description must be a string.",
                                        "Error: Description must be no longer than 255 characters.",
                                        "Error: Price must be a number.",
                                        "Error: Category must be a string.",
                                        "Error: Invalid product ID provided."
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "An error message (if product does not exist)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: This product does not exist."
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "An error message (if another product with the same name already exists)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: A product with the provided name already exists."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Admin", "Products"],
                "description": "Delete product",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "in": "query",
                    "name": "id",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Numeric ID of product to delete",
                    "required": true
                }],
                "responses": {
                    "204": {
                        "description": "Confirmation of the operation",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Product deleted successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error message (if no product ID provided or product ID is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: No product ID provided.",
                                    "examples": [
                                        "Error: No product ID provided.",
                                        "Error: Invalid product ID provided."
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "tags": ["Admin", "Users"],
                "description": "Return existing products",
                "parameters": [{
                    "in": "query",
                    "name": "id",
                    "schema": {
                        "$ref": "#/components/schemas/userId"
                    },
                    "description": "Numeric ID of specific user to get"
                }],
                "responses": {
                    "200": {
                        "description": "An array with existing users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [{
                                            "$ref": "#/components/schemas/users"
                                        },
                                        {
                                            "$ref": "#/components/schemas/user"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error message (if user ID is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Invalid user ID provided."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "An error message (if user does not exist)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: This user does not exist."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/users/{role}": {
            "get": {
                "tags": ["Admin", "Users"],
                "description": "Return existing users in role",
                "parameters": [{
                    "in": "path",
                    "name": "role",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Name of role for which to get users",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "An array with existing users in role (e.g. \"customer\")",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/usersCat"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "An error message (if no users found in role)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: No users found in provided role."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customer/account": {
            "get": {
                "tags": ["Customer", "Users"],
                "description": "Return current user's account details",
                "security": [{
                    "bearerAuth": []
                }],
                "responses": {
                    "200": {
                        "description": "An object with the current user's account data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "An error message (if user ID in session is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Invalid user ID in session."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Customer", "Users"],
                "description": "Update current user's account details",
                "security": [{
                    "bearerAuth": []
                }],
                "requestBody": {
                    "description": "details to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                        "$ref": "#/components/schemas/names"
                                    },
                                    {
                                        "$ref": "#/components/schemas/login"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Confirmation of the operation",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "User updated with ID: [user ID]"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error message (if no updates provided or input is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: No updates provided.",
                                    "examples": [
                                        "Error: No updates provided.",
                                        "Error: First name must be a string.",
                                        "Error: Last name must be a string.",
                                        "Error: Phone number must be a number.",
                                        "Error: Phone number must be Kenyan (starts with \"254\").",
                                        "Error: Email must be a string."
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "An error message (if user ID in session is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Invalid user ID in session."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Customer", "Users"],
                "description": "Delete current user's account",
                "security": [{
                    "bearerAuth": []
                }],
                "responses": {
                    "204": {
                        "description": "Confirmation of the operation"
                    },
                    "401": {
                        "description": "An error message (if user ID or cart ID in session is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Invalid user ID in session.",
                                    "examples": [
                                        "Error: Invalid user ID in session.",
                                        "Error: Invalid cart ID in session."
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customer/cart": {
            "get": {
                "tags": ["Customer", "Cart"],
                "description": "Return current user's cart",
                "security": [{
                    "bearerAuth": []
                }],
                "responses": {
                    "200": {
                        "description": "An object with the current user's cart data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/cart"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error message (if cart does not exist)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: This cart does not exist."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "An error message (if user ID or cart ID in session is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Invalid user ID in session.",
                                    "examples": [
                                        "Error: Invalid user ID in session.",
                                        "Error: Invalid cart ID in session."
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Customer", "Cart"],
                "description": "Adds item to cart",
                "security": [{
                    "bearerAuth": []
                }],
                "requestBody": {
                    "description": "product details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/cartItemBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Confirmation of the operation",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Added to cart product with ID: [product ID]",
                                    "examples": [
                                        "Added to cart product with ID: [product ID]",
                                        "Quantity updated in cart for product with ID: [product ID]"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error message (if no product ID provided or input is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: No product ID provided.",
                                    "examples": [
                                        "Error: No product ID provided.",
                                        "Error: Product ID must be a string.",
                                        "Error: Invalid product ID provided.",
                                        "Error: Quantity must be a number."
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "An error message (if cart ID in session is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Invalid cart ID in session."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Customer", "Cart"],
                "description": "Empty cart",
                "security": [{
                    "bearerAuth": []
                }],
                "responses": {
                    "200": {
                        "description": "Confirmation of the operation",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Emptied cart successfully"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "An error message (if cart ID in session is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Invalid cart ID in session."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customer/cart/checkout": {
            "get": {
                "tags": ["Customer", "Cart"],
                "description": "Check out cart",
                "security": [{
                    "bearerAuth": []
                }],
                "responses": {
                    "201": {
                        "description": "Confirmation of the order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "Order placed with ID: [order ID]"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "An error message (if user ID or cart ID in session is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Invalid user ID in session.",
                                    "examples": [
                                        "Error: Invalid user ID in session.",
                                        "Error: Invalid cart ID in session."
                                    ]
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "An error message (if cart is empty)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Your cart is empty."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customer/cart/item": {
            "put": {
                "tags": ["Customer", "Cart"],
                "description": "Update an item in the cart",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "in": "query",
                    "name": "id",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Numeric ID of product to update",
                    "required": true
                }],
                "requestBody": {
                    "description": "new details to update to product",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "quantity": {
                                        "type": "integer"
                                    }
                                },
                                "example": {
                                    "quantity": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Confirmation of the operation",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Quantity updated in cart for product with ID: [product ID]"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error message (if no product ID provided, no updates provided or input is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: No product ID provided.",
                                    "examples": [
                                        "Error: No product ID provided.",
                                        "Error: No update provided.",
                                        "Error: Invalid product ID provided.",
                                        "Error: Quantity must be a number."
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "An error message (if cart ID in session is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Invalid cart ID in session."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "An error message (if item is not in cart)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: This item is not in the cart."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customer/orders": {
            "get": {
                "tags": ["Customer", "Orders"],
                "description": "Return current user's orders",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "in": "query",
                    "name": "id",
                    "schema": {
                        "$ref": "#/components/schemas/orderId"
                    },
                    "description": "Numeric ID of specific order to get"
                }],
                "responses": {
                    "200": {
                        "description": "An array with the current user's orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [{
                                            "$ref": "#/components/schemas/orders"
                                        },
                                        {
                                            "$ref": "#/components/schemas/order"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error message (if order ID is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Invalid order ID provided."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "An error message (if user ID in session is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Invalid user ID in session."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "An error message (if no orders found or order does not exist)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: No orders found.",
                                    "examples": [
                                        "Error: No orders found.",
                                        "Error: This order does not exist."
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Customer", "Orders"],
                "description": "Cancel order",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "in": "query",
                    "name": "id",
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "description": "Numeric ID of order to delete"
                }],
                "responses": {
                    "200": {
                        "description": "Confirmation of the operation",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Order cancelled with ID: [order ID]"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error message (if order ID is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Invalid order ID provided."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "An error message (if user ID in session is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Invalid user ID in session."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "An error message (if order does not exist)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: This order does not exist."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customer/products": {
            "get": {
                "tags": ["Customer", "Products"],
                "description": "Return existing products",
                "parameters": [{
                    "in": "query",
                    "name": "id",
                    "schema": {
                        "$ref": "#/components/schemas/productId"
                    },
                    "description": "Numeric ID of specific product to get"
                }],
                "responses": {
                    "200": {
                        "description": "An array with existing products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [{
                                            "$ref": "#/components/schemas/products"
                                        },
                                        {
                                            "$ref": "#/components/schemas/product"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error message (if product ID is invalid)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: Invalid product ID provided."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "An error message (if product does not exist)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: This product does not exist."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customer/products/{category}": {
            "get": {
                "tags": ["Customer", "Products"],
                "description": "Return existing products in category",
                "parameters": [{
                    "in": "path",
                    "name": "category",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Name of category for which to get products",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "An array with existing products in category (e.g. \"vegetables\")",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/productsCat"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "An error message (if no products found in category)",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Error: No products found in provided category."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error message",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "error": {
                "type": "string",
                "example": "An unknown error occurred. Kindly try again."
            },
            "names": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "number"
                    }
                },
                "example": {
                    "firstName": "Mwenyeji",
                    "lastName": "Mkenya",
                    "phone": 254712345678
                }
            },
            "login": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "example": {
                    "email": "thisisan@email.com",
                    "password": "kibandaskiCustomer"
                }
            },
            "account": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "role": {
                        "type": "string"
                    },
                    "cartId": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": "7355234",
                    "email": "thisisan@email.com",
                    "role": "customer",
                    "cartId": "3599584"
                }
            },
            "cart": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "allOf": [{
                                    "$ref": "#/components/schemas/cartItem"
                                },
                                {
                                    "properties": {
                                        "totalCost": {
                                            "type": "integer",
                                            "description": "(quantity * product.price)"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                },
                "example": {
                    "id": "3599584",
                    "userId": "7355234",
                    "items": [{
                            "productId": "68472",
                            "quantity": 1,
                            "totalCost": 5
                        },
                        {
                            "productId": "52743",
                            "quantity": 1,
                            "totalCost": 20
                        }
                    ]
                }
            },
            "cartItem": {
                "type": "object",
                "properties": {
                    "productId": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer"
                    },
                    "totalCost": {
                        "type": "integer"
                    }
                },
                "example": {
                    "productId": "68472",
                    "quantity": 1,
                    "totalCost": 5
                }
            },
            "cartItemBody": {
                "type": "object",
                "properties": {
                    "productId": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer"
                    }
                },
                "example": {
                    "productId": "68472",
                    "quantity": 1
                }
            },
            "orders": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/order"
                },
                "example": [{
                        "id": "4378625166",
                        "createdAt": "2023-01-05T03:53:38.000Z",
                        "status": "fulfilled"
                    },
                    {
                        "id": "0059574716",
                        "createdAt": "2023-01-05T03:49:27.000Z",
                        "status": "cancelled"
                    }
                ]
            },
            "order": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/cartItem"
                        }
                    }
                },
                "example": {
                    "id": "4378625166",
                    "createdAt": "2023-01-05T03:53:38.000Z",
                    "status": "fulfilled",
                    "items": [{
                            "productId": "43193",
                            "quantity": 1,
                            "totalCost": 80
                        },
                        {
                            "productId": "83132",
                            "quantity": 1,
                            "totalCost": 20
                        },
                        {
                            "productId": "08053",
                            "quantity": 1,
                            "totalCost": 30
                        },
                        {
                            "productId": "01075",
                            "quantity": 1,
                            "totalCost": 5
                        }
                    ]
                }
            },
            "ordersAll": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/orderAll"
                },
                "example": [{
                        "id": "7792357006",
                        "userId": "3532335",
                        "createdAt": "2023-01-05T16:03:17.000Z",
                        "status": "cancelled"
                    },
                    {
                        "id": "4378625166",
                        "userId": "7355234",
                        "createdAt": "2023-01-05T03:53:38.000Z",
                        "status": "fulfilled"
                    },
                    {
                        "id": "0059574716",
                        "userId": "7355234",
                        "createdAt": "2023-01-05T03:49:27.000Z",
                        "status": "cancelled"
                    }
                ]
            },
            "orderAll": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "userId": {
                        "$ref": "#/components/schemas/userId"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/cartItem"
                        }
                    }
                },
                "example": {
                    "id": "4378625166",
                    "userId": "7355234",
                    "createdAt": "2023-01-05T03:53:38.000Z",
                    "status": "fulfilled",
                    "items": [{
                            "productId": "43193",
                            "quantity": 1,
                            "totalCost": 80
                        },
                        {
                            "productId": "83132",
                            "quantity": 1,
                            "totalCost": 20
                        },
                        {
                            "productId": "08053",
                            "quantity": 1,
                            "totalCost": 30
                        },
                        {
                            "productId": "01075",
                            "quantity": 1,
                            "totalCost": 5
                        }
                    ]
                }
            },
            "orderId": {
                "type": "string",
                "minLength": 10,
                "maxLength": 10
            },
            "products": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/product"
                },
                "example": [{
                        "id": "01075",
                        "name": "Water",
                        "description": "Just a good old glass of water.",
                        "price": 5,
                        "category": "drinks"
                    },
                    {
                        "id": "08053",
                        "name": "Ugali",
                        "description": "The maize flour delicacy you know and love.",
                        "price": 30,
                        "category": "carbohydrates"
                    },
                    {
                        "id": "11540",
                        "name": "Fresh juice",
                        "description": "Freshly squeezed orange, mango or pineapple juice.",
                        "price": 30,
                        "category": "drinks"
                    },
                    {
                        "id": "14659",
                        "name": "Githeri special",
                        "description": "A delicious mix of githeri and beef stew.",
                        "price": 70,
                        "category": "proteins"
                    },
                    {
                        "id": "19821",
                        "name": "Fish",
                        "description": "Deep fried whole fish straight from the pan.",
                        "price": 40,
                        "category": "proteins"
                    }
                ]
            },
            "product": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "category": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": "43193",
                    "name": "Beef stew",
                    "description": "Delicious beef stew made with tomatoes, onions and spices.",
                    "price": 80,
                    "category": "proteins"
                }
            },
            "productBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "category": {
                        "type": "string"
                    }
                },
                "example": {
                    "name": "Beef stew",
                    "description": "Delicious beef stew made with tomatoes, onions and spices.",
                    "price": 80,
                    "category": "proteins"
                }
            },
            "productsCat": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/product"
                },
                "example": [{
                        "id": "46621",
                        "name": "Mchicha",
                        "description": "A healthy portion of amaranth.",
                        "price": 30
                    },
                    {
                        "id": "83132",
                        "name": "Sukuma wiki",
                        "description": "Collard greens made with onions and spices.",
                        "price": 20
                    },
                    {
                        "id": "86543",
                        "name": "Cabbage",
                        "description": "Cabbage made with onions and spices.",
                        "price": 20
                    }
                ]
            },
            "productId": {
                "type": "string",
                "minLength": 5,
                "maxLength": 5
            },
            "users": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/user"
                },
                "example": [{
                        "id": "7355234",
                        "firstName": "Mwenyeji",
                        "lastName": "Mkenya",
                        "phone": 254712345678,
                        "email": "thisisan@email.com",
                        "role": "customer"
                    },
                    {
                        "id": "3532335",
                        "firstName": "Bigman",
                        "lastName": "Bazu",
                        "phone": 254202345678,
                        "email": "thisisanother@email.com",
                        "role": "admin"
                    }
                ]
            },
            "usersCat": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/user"
                },
                "example": [{
                        "id": "7355234",
                        "firstName": "Mwenyeji",
                        "lastName": "Mkenya",
                        "phone": 254712345678,
                        "email": "thisisan@email.com"
                    },
                    {
                        "id": "9786965",
                        "firstName": "Wanjiku",
                        "lastName": "Oduor",
                        "phone": 254701324657,
                        "email": "wanjiku@oduor.com"
                    }
                ]
            },
            "user": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "number"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "example": {
                    "id": "7355234",
                    "firstName": "Mwenyeji",
                    "lastName": "Mkenya",
                    "phone": 254712345678,
                    "email": "thisisan@email.com"
                }
            },
            "userId": {
                "type": "string",
                "minLength": 7,
                "maxLength": 7
            }
        }
    },
    "tags": [{
            "name": "Authentication",
            "description": "Authentication operations"
        },
        {
            "name": "Admin",
            "description": "Admin operations"
        },
        {
            "name": "Customer",
            "description": "Customer operations"
        },
        {
            "name": "Cart",
            "description": "Cart operations"
        },
        {
            "name": "Orders",
            "description": "Order operations"
        },
        {
            "name": "Products",
            "description": "Product operations"
        },
        {
            "name": "Users",
            "description": "User operations"
        }
    ]
}